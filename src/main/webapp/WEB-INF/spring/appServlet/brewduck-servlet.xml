<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:task="http://www.springframework.org/schema/task"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
                                 http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                                 http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                                 http://www.springframework.org/schema/task
                                 http://www.springframework.org/schema/task/spring-task-3.2.xsd
                                 http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven conversion-service="conversionService" content-negotiation-manager="contentNegotiationManager">
        <argument-resolvers>
            <beans:bean class="com.brewduck.framework.data.CustomArgumentResolver"/>
        </argument-resolvers>
        <message-converters register-defaults="false">
            <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <beans:property name="supportedMediaTypes" value="text/plain; charset=UTF-8" />
            </beans:bean>
            <beans:bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <beans:property name="supportedMediaTypes" value="application/json; charset=UTF-8" />
                <beans:property name="prettyPrint" value="true" />
            </beans:bean>
        </message-converters>
    </annotation-driven>

    <beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <beans:property name="favorPathExtension" value="false" />
        <beans:property name="favorParameter" value="false" />
        <beans:property name="ignoreAcceptHeader" value="false" />
        <beans:property name="mediaTypes">
            <beans:value>
                htm=text/html;charset=UTF-8
                html=text/html;charset=UTF-8
                ajax=text/html;charset=UTF-8
                json=application/json;charset=UTF-8
                jsonp=application/javascript;charset=UTF-8
                xml=application/xml;charset=UTF-8
                *=*/*;charset=UTF-8
            </beans:value>
        </beans:property>
    </beans:bean>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Only needed because we install custom converters to support the examples in the org.springframewok.samples.mvc.convert package -->
    <beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <beans:property name="formatters">
            <beans:bean class="com.brewduck.framework.convert.MaskFormatAnnotationFormatterFactory" />
        </beans:property>
    </beans:bean>

    <!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="uploadTempDir" value="/WEB-INF/upload"/>
        <beans:property name="maxUploadSize" value="100000000"/>
    </beans:bean>

    <!-- Imports user-defined @Controller beans that process client requests -->
    <beans:import resource="controllers.xml" />

    <task:annotation-driven />

    <resources mapping="/favicon.ico" location="/resources/theme/images/favicon.ico" />

</beans:beans>